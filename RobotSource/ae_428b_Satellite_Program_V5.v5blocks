{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"C`tqJYdzx6z8*b~SU=L=\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">sensePosition</variable><variable type=\"\" id=\"9;-:l%EloyU|MAzcL${]\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">degreesPerInch</variable><variable type=\"\" id=\"ckzsU80xtX,C#F7s;O^a\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">senseIncrement</variable></variables><comment id=\";rj+=V+vAOYilgP-MXU-\" x=\"608\" y=\"-632\" h=\"232\" w=\"359\">Project:\nAE Activity 4.2.8\n\nDescription:\nSatellite Robot measures distance to terrain below every three inches of travel along its path (longitude) and prints to console.\n\nConfiguration:\nNone</comment><block type=\"v5_events_when_controller_button\" id=\"qF3^LtUJFW{GhA3}W@9O\" x=\"70\" y=\"-630\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonX</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_other_comment\" id=\".(QN?(2)M4p4**HRBZS7\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\":t)136dW`Qy4O*jSOBLe\"><field name=\"comment\">Robot does not move until controller button X pressed</field></shadow></value><next><block type=\"v5_other_comment\" id=\"vm!?sxDNz$fP=|fhR|/w\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"SQ}xKw)]ryrEnD7FCH;{\"><field name=\"comment\">Set the precision of values printed to the Print Console</field></shadow></value><next><block type=\"v5_looks_set_print_precision\" id=\"sC+)bQ]-f|_{%IquPme7\"><field name=\"PRECISION\">2</field><field name=\"TARGET\">Console</field><next><block type=\"v5_looks_clear_all_rows\" id=\"d_J.a{}K%7{@hZM7wGAO\"><field name=\"TARGET\">Console</field><next><block type=\"v5_other_comment\" id=\"?{,SaP/u=vGG2tsu=NVG\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Mp`w6X.k:|#FRkYXno_@\"><field name=\"comment\">Set Motor encoder to 0 degrees</field></shadow></value><next><block type=\"v5_motion_set_motor_position\" id=\"yL{)W^umOe$xGN-6|nS_\"><field name=\"MOTOR\">Motor20</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"2GnpWSU/!A$U]tG?v]Uj\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_other_comment\" id=\"kdB$BlF$RREqarr=+fe|\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"m{J72gmOc8[pn=)T}aM:\"><field name=\"comment\">Define measurement interval in units of inches</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"-!*YekJflm_hb7%5!qkA\"><field name=\"VARIABLE\" id=\"ckzsU80xtX,C#F7s;O^a\" variabletype=\"\">senseIncrement</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"08/~Eg~XX:,o_6O@2}=7\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"v5_other_comment\" id=\"?p=0|/;}F3lcS$=z4F(*\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"nY^Spta/BVS|I%:a^5X(\"><field name=\"comment\">Define position for inital sense position as 0 inches</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"F(V%?pp=sDya!InlAVw^\"><field name=\"VARIABLE\" id=\"C`tqJYdzx6z8*b~SU=L=\" variabletype=\"\">sensePosition</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"NnSpN3]T#af~%X.uEg`!\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_other_comment\" id=\"5R3#L}GcH5n/rmZu.5kO\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"s^LU(4wRZ,c|6(,k)xU=\"><field name=\"comment\">Define calculation of degrees of rotation to travel 1 inch</field></shadow></value><next><block type=\"v5_other_comment\" id=\"`,.L+)9kEA|}atuvF-Ax\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"gZpZyeyRsa!$k*a;T}5Y\"><field name=\"comment\">Calculation input: Circumference = pi * d = 3.14 * 2.75 inch diameter wheel</field></shadow></value><next><block type=\"v5_other_comment\" id=\"tReSyvYZtq|McN+dImR^\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"?R%pZVieTS~4|JaHPger\"><field name=\"comment\">Calculation:  Rotation / inch = (1 inch * 360 deg) / Circumference</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"S7Eink5oU+X:[]?@3#_g\"><field name=\"VARIABLE\" id=\"9;-:l%EloyU|MAzcL${]\" variabletype=\"\">degreesPerInch</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"D7E3LwyPz:d,2snA?J;_\"><field name=\"NUM\">41.69</field></shadow></value><next><block type=\"v5_motion_set_motor_position\" id=\":VoZ64CWRVC:Tc$LTaqN\"><field name=\"MOTOR\">Motor20</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"xA.kbp7Wah7PIEp%u%(I\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"RFf@9sLh8IXp;A?w.yyq\"><field name=\"MOTOR\">Motor20</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"-}-4|W:wHlfNvv5@KOOc\"><field name=\"NUM\">30</field></shadow></value><next><block type=\"v5_control_repeat_until\" id=\"3-3Ilj!r+e-/Pg$ke|J,\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_bumper\" id=\";7~b:S2KNgR-;iO5!17D\"><field name=\"BUMPER\">BumperH</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"pXDGI#Zeoe!a`8mI2]4x\"><field name=\"MOTOR\">Motor20</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_other_comment\" id=\"W[Y,hS3Sw_?Y~6D_?bz#\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"}3Q)]z9Kc7`]hxgi0|NX\"><field name=\"comment\">Claculate position target for next measurement</field></shadow></value><next><block type=\"v5_control_wait_until\" id=\"yd=38cP*ws{==HudsncX\"><value name=\"CONDITION\"><block type=\"v5_operator_greater_than\" id=\"{CuPR$L?mpry?{0hP1FO\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"EVZX1gM,tpW*52j0dpeV\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_divide\" id=\"aoGK4yHYdu}83A0R1:Z[\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"Kx8k2Y?=b*%+3kXZ)P2S\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_motor\" id=\"RyXWG.uQ=v.Il(.,Hr9p\"><field name=\"MOTOR\">Motor20</field><field name=\"UNITS\">deg</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"2NxJ73bV0.~O;HT_JWR]\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"rkHj55qWT/O1SwEj/!^_\"><field name=\"VARIABLE\" id=\"9;-:l%EloyU|MAzcL${]\" variabletype=\"\">degreesPerInch</field></block></value></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"_NnYDbiGHHF2bfRNsstQ\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_subtract\" id=\"^cv|xF:4xCB)U?5AEvEG\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"Y8oyy/A64oJbdpB8.Jzn\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"i,.W6jlzH.*JP`PDY5e|\"><field name=\"VARIABLE\" id=\"C`tqJYdzx6z8*b~SU=L=\" variabletype=\"\">sensePosition</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"eGw8wA{rP`~U2LaKX]:8\"><field name=\"NUM\">0.05</field></shadow></value></block></value></block></value><next><block type=\"v5_other_comment\" id=\"Z!itvqBO6bd$`HH8~ZUs\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"uTmrp[hQ|cO44v{8oei9\"><field name=\"comment\">Print Longitude and Distance with comma seaparator in console</field></shadow></value><next><block type=\"v5_looks_print\" id=\"Feeg_%k^`x;gV]2!EE6^\"><field name=\"TARGET\">Console</field><value name=\"DATA\"><shadow type=\"text\" id=\"%C1LiKXN|dO/CO{{jul)\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_variables_variable\" id=\"@fmHQ?#`/|ATO*OtQKDU\"><field name=\"VARIABLE\" id=\"C`tqJYdzx6z8*b~SU=L=\" variabletype=\"\">sensePosition</field></block></value><next><block type=\"v5_looks_print\" id=\"k^w;!5f8OIju|,zz8fjh\"><field name=\"TARGET\">Console</field><value name=\"DATA\"><shadow type=\"text\" id=\"+SuOLQK8U?Ed@?:qst_9\"><field name=\"TEXT\">, </field></shadow></value><next><block type=\"v5_looks_print\" id=\"AP:5hs]3amx-dlVS2)Dk\"><field name=\"TARGET\">Console</field><value name=\"DATA\"><shadow type=\"text\" id=\"#~XiM.50(:C:x*y,i,J.\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_distance_object_distance\" id=\"Z0q1it*b3/B.-KZU0Bm=\"><field name=\"DISTANCE\">Distance19</field><field name=\"UNITS\">in</field></block></value><next><block type=\"v5_looks_next_row\" id=\"e+W}t^zMF{pS-zuwkj0v\"><field name=\"TARGET\">Console</field><next><block type=\"v5_other_comment\" id=\"RCX{k}eb]kCB@2Yb9d2R\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"?9d#!+J3Z_mXXXy$Z1o5\"><field name=\"comment\">Add a 10ms delay to avoid filling the Print Console buffer</field></shadow></value><next><block type=\"v5_control_wait\" id=\"uT5nM.pc`[8@QM0qsKV/\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"(tpdZvpS;CGN3LTs}BBS\"><field name=\"NUM\">0.01</field></shadow></value><next><block type=\"v5_variables_change_variable\" id=\"zH2cJSzA%a{oE[*XicNI\"><field name=\"VARIABLE\" id=\"C`tqJYdzx6z8*b~SU=L=\" variabletype=\"\">sensePosition</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"g|4=}@Le-]D7(o7,b3?o\"><field name=\"NUM\">1</field></shadow><block type=\"v5_variables_variable\" id=\"r?zFmi,|^g,*r8xa?ORa\"><field name=\"VARIABLE\" id=\"ckzsU80xtX,C#F7s;O^a\" variabletype=\"\">senseIncrement</field></block></value><next><block type=\"v5_other_comment\" id=\"DIM7(CMDc9cAD6Qz5Rj2\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"FCMg8EFd_NA![U-{)Q*?\"><field name=\"comment\">Waits until distance sensor is within 0.05 inch of the sense position location</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"wO~A:$)@`5?HI2bE}Pc=\"><field name=\"MOTOR\">Motor20</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[8],"name":"BumperH","customName":false,"deviceType":"Bumper","setting":{},"triportSourcePort":22},{"port":[19],"name":"Distance19","customName":false,"deviceType":"Distance","setting":{},"triportSourcePort":22},{"port":[20],"name":"Motor20","customName":false,"deviceType":"Motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"","appVersion":"","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nbumper BumperH = bumper(Brain.ThreeWirePort.H);\ndistance Distance19 = distance(PORT19);\nmotor Motor20 = motor(PORT20, ratio18_1, true);\n\ncontroller Controller1 = controller(primary);\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat sensePosition, degreesPerInch, senseIncrement;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToConsole_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Console_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when Controller1 ButtonX pressed\" hat block\nvoid onevent_Controller1ButtonX_pressed_0() {\n  // Robot does not move until controller button X pressed\n  // Set the precision of values printed to the Print Console\n  Console_precision = 2;\n  printf(\"\\033[2J\\n\");\n  // Set Motor encoder to 0 degrees\n  Motor20.setRotation(0.0, degrees);\n  // Define measurement interval in units of inches\n  senseIncrement = 3.0;\n  // Define position for inital sense position as 0 inches\n  sensePosition = 0.0;\n  // Define calculation of degrees of rotation to travel 1 inch\n  // Calculation input: Circumference = pi * d = 3.14 * 2.75 inch diameter wheel\n  // Calculation:  Rotation / inch = (1 inch * 360 deg) / Circumference\n  degreesPerInch = 41.69;\n  Motor20.setRotation(0.0, degrees);\n  Motor20.setVelocity(30.0, percent);\n  while (!BumperH.pressing()) {\n    Motor20.spin(forward);\n    // Claculate position target for next measurement\n    waitUntil((Motor20.rotation(degrees) / degreesPerInch > sensePosition - 0.05));\n    // Print Longitude and Distance with comma seaparator in console\n    printf(printToConsole_numberFormat(), static_cast<float>(sensePosition));\n    printf(\", \");\n    printf(printToConsole_numberFormat(), static_cast<float>(Distance19.objectDistance(inches)));\n    printf(\"\\n\");\n    // Add a 10ms delay to avoid filling the Print Console buffer\n    wait(0.01, seconds);\n    sensePosition = sensePosition + senseIncrement;\n    // Waits until distance sensor is within 0.05 inch of the sense position location\n  wait(5, msec);\n  }\n  Motor20.stop();\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonX.pressed(onevent_Controller1ButtonX_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n}"}